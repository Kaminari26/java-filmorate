DROP TABLE IF EXISTS FRIENDS_USER;
DROP TABLE IF EXISTS LIKES_FILM;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS FILM_GENRE;
DROP TABLE IF EXISTS GENRE;
DROP TABLE IF EXISTS FILMS;
DROP TABLE IF EXISTS MPA;

CREATE TABLE IF NOT EXISTS MPA (
    mpa_id BIGINT generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(20) UNIQUE
);

CREATE TABLE IF NOT EXISTS FILMS (
    film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(200),
    release_date DATE NOT NULL,
    duration INTEGER NOT NULL,
    mpa_id BIGINT REFERENCES MPA (mpa_id)
);

CREATE TABLE IF NOT EXISTS GENRE (
    genre_id BIGINT generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(40) UNIQUE
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
    film_id BIGINT,
    genre_id BIGINT,
    	PRIMARY KEY (film_id, genre_id),
    	FOREIGN KEY (film_id) REFERENCES FILMS (film_id) ON DELETE CASCADE ON UPDATE CASCADE,
    	FOREIGN KEY (genre_id) REFERENCES GENRE (genre_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS USERS (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    login VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(50),
    birthday DATE
);

CREATE TABLE IF NOT EXISTS LIKES_FILM (
        film_id BIGINT,
        user_id BIGINT,
    	PRIMARY KEY (film_id, user_id),
    	FOREIGN KEY (user_id) REFERENCES USERS (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    	FOREIGN KEY (film_id) REFERENCES FILMS (film_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS FRIENDS_USER (
    user_id BIGINT,
    friends_id BIGINT,
    friendship BOOLEAN,
    PRIMARY KEY (user_id, friends_id),
    	FOREIGN KEY (user_id) REFERENCES USERS (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    	FOREIGN KEY (friends_id) REFERENCES USERS (user_id) ON DELETE CASCADE ON UPDATE CASCADE
);